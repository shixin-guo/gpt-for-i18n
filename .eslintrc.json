{
  "extends": [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "next"
  ],
  "env": {
    "node": true,
    "browser": true,
    "es6": true
  },
  "globals": {
    "__DEBUG__": true,
    "__VERSION__": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 11,
    "sourceType": "module"
  },
  "ignorePatterns": [
    "CHANGELOG.md",
    "build",
    "dist",
    "node_modules"
  ],

  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx", ".d.ts"]
    },
  
    // "import/resolver": {
    //   "typescript": {
    //     "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
    //     "project": "packages/*/tsconfig.json"
    //   }
    // },
    "react": {
      "version": "detect"
    }
  },
  "overrides": [{
    "files": [
      "**/*.ts",
      "**/*.tsx"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:eslint-comments/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:import/recommended",
      "plugin:import/typescript",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:import/typescript"
    ],
    "plugins": [
      "@typescript-eslint",
      "prettier"
    ],
    "rules": {
      "eslint-comments/disable-enable-pair": ["error", {"allowWholeFile": true}],
      "prettier/prettier": "warn",
      "import/no-unresolved": "off",
      "prefer-const": "error",
      "no-trailing-spaces": "error",
      "no-var": "error",
      "no-console": "warn",
      "quote-props": ["error", "as-needed"],
      "no-multiple-empty-lines" : ["error", { "max": 1, "maxEOF": 1 }],
      "max-len": [
        "error",
        {
          "ignoreComments": true,
          "ignoreStrings": true,
          "ignoreTemplateLiterals": true,
          "ignoreUrls": true,
          "code": 120
        }
      ],
      "semi": [
        "error",
        "always"
      ],
      "keyword-spacing": [
        "error",
        {
          "before": true,
          "after": true
        }
      ],
      "object-property-newline": [
        "error",
        {
          "allowAllPropertiesOnSameLine": true
        }
      ],
      "object-curly-spacing": [
        "error",
        "always"
      ],
      "key-spacing": [
        "error",
        {
          "beforeColon": false,
          "afterColon": true,
          "mode": "strict"
        }
      ],
      "no-multi-spaces": [
        "error",
        {
          "ignoreEOLComments": true
        }
      ],
      "space-infix-ops": [
        "error",
        {
          "int32Hint": false
        }
      ],
      "space-in-parens": [
        "error",
        "never"
      ],
      "comma-spacing": [
        "error",
        {
          "before": false,
          "after": true
        }
      ],
      "arrow-spacing": [
        "error",
        {
          "before": true,
          "after": true
        }
      ],
      "template-curly-spacing": [
        "error",
        "never"
      ],
      "space-before-blocks": [
        "error",
        "always"
      ],
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/no-var-requires": "warn",
      // `eslint-plugin-import`
      // https://github.com/benmosher/eslint-plugin-import
      "import/order": [
        "error",
        {
          "groups": ["external", "internal"],
          "newlines-between": "always-and-inside-groups"
        }
      ],
      "sort-imports": [
        "warn",
        {
          "ignoreCase": false,
          "ignoreDeclarationSort": true,
          "ignoreMemberSort": false
        }
      ],
      "@typescript-eslint/prefer-interface": "off",
      // "@typescript-eslint/member-delimiter-style": [
      //   "error",
      //   {
      //     "multiline": {
      //       "delimiter": "comma",
      //       "requireLast": false
      //     },
      //     "singleline": {
      //       "delimiter": "comma"
      //     }
      //   }
      // ],
      // "@typescript-eslint/explicit-function-return-type": [
      //   "error",
      //   {
      //     "allowExpressions": true,
      //     "allowTypedFunctionExpressions": true
      //   }
      // ],
      "@typescript-eslint/no-empty-function": "warn",
      "@typescript-eslint/no-use-before-define": [
        "error",
        {
          "functions": false
        }
      ],
      "@typescript-eslint/no-explicit-any": [
        "off",
        {
          "ignoreRestArgs": true
        }
      ]
    }
  }]
}